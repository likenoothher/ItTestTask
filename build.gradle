plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
}

apply from: "gradle/checkstyle/checkstyle.gradle"

group = 'com.azierets'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.4.3'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.4'
    implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '2.5.5'
    implementation group: 'redis.clients', name: 'jedis', version: '3.7.0'
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.4'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '2.2'

    testImplementation group: 'com.playtika.testcontainers', name: 'embedded-rabbitmq', version: '2.0.14'
    testImplementation group: 'com.playtika.testcontainers', name: 'embedded-redis', version: '2.0.14'
    testImplementation group: 'com.playtika.testcontainers', name: 'embedded-postgresql', version: '2.0.14'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/azierets/restapijwt/config/*',
                    'com/azierets/restapijwt/dto/*',
                    'com/azierets/restapijwt/rabbit/messagedto/*',
                    'com/azierets/restapijwt/exceptionhandler/exception/*',
                    'com/azierets/restapijwt/model/*'
            ])
        }))
    }

    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/azierets/restapijwt/config/*',
                    'com/azierets/restapijwt/dto/*',
                    'com/azierets/restapijwt/rabbit/messagedto/*',
                    'com/azierets/restapijwt/exceptionhandler/exception/*',
                    'com/azierets/restapijwt/model/*'
            ])
        }))
    }
    violationRules {
        rule {
            limit {
                minimum = 0.90
                counter = 'LINE'
            }
        }

        rule {
            limit {
                minimum = 0.80
                counter = 'BRANCH'
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
