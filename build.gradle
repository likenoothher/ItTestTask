plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
}

apply from: "gradle/checkstyle/checkstyle.gradle"

group = 'com.azierets'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.4.3'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.4'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.5.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '2.2'
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'

}

test {
    useJUnitPlatform()
    environment("JWT_TOKEN_SECRET", "qwerty")
    environment("SPRING_DATASOURCE_URL", "jdbc:h2:mem:test")
    environment("spring_datasource_driverClassName", "org.h2.Driver")
    environment("JWT_TOKEN_SECRET", "qwerty")
    environment("SPRING_RABBITMQ_HOST", "localhost")
    environment("SPRING_RABBITMQ_PORT", "5672")
    environment("SPRING_RABBITMQ_USERNAME", "guest")
    environment("SPRING_RABBITMQ_PASSWORD", "guest")
    environment("SPRING_RABBITMQ_TEMPLATE_EXCHANGE", "springJwtExchange")
    environment("SPRING_RABBITMQ_TEMPLATE_QUEUE-NAME", "springJwtLoggingQueue")
    environment("JWT_TOKEN_EXPIRED", "60000000")
}
